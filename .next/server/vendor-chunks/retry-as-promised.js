"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/retry-as-promised";
exports.ids = ["vendor-chunks/retry-as-promised"];
exports.modules = {

/***/ "(rsc)/./node_modules/retry-as-promised/dist/index.js":
/*!******************************************************!*\
  !*** ./node_modules/retry-as-promised/dist/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.retryAsPromised = exports.TimeoutError = void 0;\nclass TimeoutError extends Error {\n    constructor(message, previousError) {\n        super(message);\n        this.name = \"TimeoutError\";\n        this.previous = previousError;\n    }\n}\nexports.TimeoutError = TimeoutError;\nfunction matches(match, err) {\n    if (typeof match === 'function') {\n        try {\n            if (err instanceof match)\n                return true;\n        }\n        catch (_) {\n            return !!match(err);\n        }\n    }\n    if (match === err.toString())\n        return true;\n    if (match === err.message)\n        return true;\n    return match instanceof RegExp\n        && (match.test(err.message) || match.test(err.toString()));\n}\nfunction retryAsPromised(callback, optionsInput) {\n    if (!callback || !optionsInput) {\n        throw new Error('retry-as-promised must be passed a callback and a options set');\n    }\n    optionsInput = (typeof optionsInput === \"number\" ? { max: optionsInput } : optionsInput);\n    const options = {\n        $current: \"$current\" in optionsInput ? optionsInput.$current : 1,\n        max: optionsInput.max,\n        timeout: optionsInput.timeout || undefined,\n        match: optionsInput.match ? Array.isArray(optionsInput.match) ? optionsInput.match : [optionsInput.match] : [],\n        backoffBase: optionsInput.backoffBase === undefined ? 100 : optionsInput.backoffBase,\n        backoffExponent: optionsInput.backoffExponent || 1.1,\n        report: optionsInput.report,\n        name: optionsInput.name || callback.name || 'unknown'\n    };\n    if (options.match && !Array.isArray(options.match))\n        options.match = [options.match];\n    if (options.report)\n        options.report('Trying ' + options.name + ' #' + options.$current + ' at ' + new Date().toLocaleTimeString(), options);\n    return new Promise(function (resolve, reject) {\n        let timeout;\n        let backoffTimeout;\n        let lastError;\n        if (options.timeout) {\n            timeout = setTimeout(function () {\n                if (backoffTimeout)\n                    clearTimeout(backoffTimeout);\n                reject(new TimeoutError(options.name + ' timed out', lastError));\n            }, options.timeout);\n        }\n        Promise.resolve(callback({ current: options.$current }))\n            .then(resolve)\n            .then(function () {\n            if (timeout)\n                clearTimeout(timeout);\n            if (backoffTimeout)\n                clearTimeout(backoffTimeout);\n        })\n            .catch(function (err) {\n            if (timeout)\n                clearTimeout(timeout);\n            if (backoffTimeout)\n                clearTimeout(backoffTimeout);\n            lastError = err;\n            if (options.report)\n                options.report((err && err.toString()) || err, options, err);\n            // Should not retry if max has been reached\n            var shouldRetry = options.$current < options.max;\n            if (!shouldRetry)\n                return reject(err);\n            shouldRetry = options.match.length === 0 || options.match.some(function (match) {\n                return matches(match, err);\n            });\n            if (!shouldRetry)\n                return reject(err);\n            var retryDelay = options.backoffBase * Math.pow(options.backoffExponent, options.$current - 1);\n            // Do some accounting\n            options.$current++;\n            if (options.report)\n                options.report(`Retrying ${options.name} (${options.$current})`, options);\n            if (retryDelay) {\n                // Use backoff function to ease retry rate\n                if (options.report)\n                    options.report(`Delaying retry of ${options.name} by ${retryDelay}`, options);\n                backoffTimeout = setTimeout(function () {\n                    retryAsPromised(callback, options)\n                        .then(resolve)\n                        .catch(reject);\n                }, retryDelay);\n            }\n            else {\n                retryAsPromised(callback, options)\n                    .then(resolve)\n                    .catch(reject);\n            }\n        });\n    });\n}\nexports.retryAsPromised = retryAsPromised;\n;\nexports[\"default\"] = retryAsPromised;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmV0cnktYXMtcHJvbWlzZWQvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUIsR0FBRyxvQkFBb0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELG9CQUFvQjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsbUNBQW1DLDJCQUEyQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsY0FBYyxHQUFHLGlCQUFpQjtBQUM3RTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsY0FBYyxLQUFLLFdBQVc7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4vbm9kZV9tb2R1bGVzL3JldHJ5LWFzLXByb21pc2VkL2Rpc3QvaW5kZXguanM/NTY2YiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJldHJ5QXNQcm9taXNlZCA9IGV4cG9ydHMuVGltZW91dEVycm9yID0gdm9pZCAwO1xuY2xhc3MgVGltZW91dEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHByZXZpb3VzRXJyb3IpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiVGltZW91dEVycm9yXCI7XG4gICAgICAgIHRoaXMucHJldmlvdXMgPSBwcmV2aW91c0Vycm9yO1xuICAgIH1cbn1cbmV4cG9ydHMuVGltZW91dEVycm9yID0gVGltZW91dEVycm9yO1xuZnVuY3Rpb24gbWF0Y2hlcyhtYXRjaCwgZXJyKSB7XG4gICAgaWYgKHR5cGVvZiBtYXRjaCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKGVyciBpbnN0YW5jZW9mIG1hdGNoKVxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChfKSB7XG4gICAgICAgICAgICByZXR1cm4gISFtYXRjaChlcnIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChtYXRjaCA9PT0gZXJyLnRvU3RyaW5nKCkpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIGlmIChtYXRjaCA9PT0gZXJyLm1lc3NhZ2UpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBtYXRjaCBpbnN0YW5jZW9mIFJlZ0V4cFxuICAgICAgICAmJiAobWF0Y2gudGVzdChlcnIubWVzc2FnZSkgfHwgbWF0Y2gudGVzdChlcnIudG9TdHJpbmcoKSkpO1xufVxuZnVuY3Rpb24gcmV0cnlBc1Byb21pc2VkKGNhbGxiYWNrLCBvcHRpb25zSW5wdXQpIHtcbiAgICBpZiAoIWNhbGxiYWNrIHx8ICFvcHRpb25zSW5wdXQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdyZXRyeS1hcy1wcm9taXNlZCBtdXN0IGJlIHBhc3NlZCBhIGNhbGxiYWNrIGFuZCBhIG9wdGlvbnMgc2V0Jyk7XG4gICAgfVxuICAgIG9wdGlvbnNJbnB1dCA9ICh0eXBlb2Ygb3B0aW9uc0lucHV0ID09PSBcIm51bWJlclwiID8geyBtYXg6IG9wdGlvbnNJbnB1dCB9IDogb3B0aW9uc0lucHV0KTtcbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICAkY3VycmVudDogXCIkY3VycmVudFwiIGluIG9wdGlvbnNJbnB1dCA/IG9wdGlvbnNJbnB1dC4kY3VycmVudCA6IDEsXG4gICAgICAgIG1heDogb3B0aW9uc0lucHV0Lm1heCxcbiAgICAgICAgdGltZW91dDogb3B0aW9uc0lucHV0LnRpbWVvdXQgfHwgdW5kZWZpbmVkLFxuICAgICAgICBtYXRjaDogb3B0aW9uc0lucHV0Lm1hdGNoID8gQXJyYXkuaXNBcnJheShvcHRpb25zSW5wdXQubWF0Y2gpID8gb3B0aW9uc0lucHV0Lm1hdGNoIDogW29wdGlvbnNJbnB1dC5tYXRjaF0gOiBbXSxcbiAgICAgICAgYmFja29mZkJhc2U6IG9wdGlvbnNJbnB1dC5iYWNrb2ZmQmFzZSA9PT0gdW5kZWZpbmVkID8gMTAwIDogb3B0aW9uc0lucHV0LmJhY2tvZmZCYXNlLFxuICAgICAgICBiYWNrb2ZmRXhwb25lbnQ6IG9wdGlvbnNJbnB1dC5iYWNrb2ZmRXhwb25lbnQgfHwgMS4xLFxuICAgICAgICByZXBvcnQ6IG9wdGlvbnNJbnB1dC5yZXBvcnQsXG4gICAgICAgIG5hbWU6IG9wdGlvbnNJbnB1dC5uYW1lIHx8IGNhbGxiYWNrLm5hbWUgfHwgJ3Vua25vd24nXG4gICAgfTtcbiAgICBpZiAob3B0aW9ucy5tYXRjaCAmJiAhQXJyYXkuaXNBcnJheShvcHRpb25zLm1hdGNoKSlcbiAgICAgICAgb3B0aW9ucy5tYXRjaCA9IFtvcHRpb25zLm1hdGNoXTtcbiAgICBpZiAob3B0aW9ucy5yZXBvcnQpXG4gICAgICAgIG9wdGlvbnMucmVwb3J0KCdUcnlpbmcgJyArIG9wdGlvbnMubmFtZSArICcgIycgKyBvcHRpb25zLiRjdXJyZW50ICsgJyBhdCAnICsgbmV3IERhdGUoKS50b0xvY2FsZVRpbWVTdHJpbmcoKSwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgbGV0IHRpbWVvdXQ7XG4gICAgICAgIGxldCBiYWNrb2ZmVGltZW91dDtcbiAgICAgICAgbGV0IGxhc3RFcnJvcjtcbiAgICAgICAgaWYgKG9wdGlvbnMudGltZW91dCkge1xuICAgICAgICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmIChiYWNrb2ZmVGltZW91dClcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KGJhY2tvZmZUaW1lb3V0KTtcbiAgICAgICAgICAgICAgICByZWplY3QobmV3IFRpbWVvdXRFcnJvcihvcHRpb25zLm5hbWUgKyAnIHRpbWVkIG91dCcsIGxhc3RFcnJvcikpO1xuICAgICAgICAgICAgfSwgb3B0aW9ucy50aW1lb3V0KTtcbiAgICAgICAgfVxuICAgICAgICBQcm9taXNlLnJlc29sdmUoY2FsbGJhY2soeyBjdXJyZW50OiBvcHRpb25zLiRjdXJyZW50IH0pKVxuICAgICAgICAgICAgLnRoZW4ocmVzb2x2ZSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICh0aW1lb3V0KVxuICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgICAgICAgIGlmIChiYWNrb2ZmVGltZW91dClcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoYmFja29mZlRpbWVvdXQpO1xuICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgIGlmICh0aW1lb3V0KVxuICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgICAgICAgIGlmIChiYWNrb2ZmVGltZW91dClcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoYmFja29mZlRpbWVvdXQpO1xuICAgICAgICAgICAgbGFzdEVycm9yID0gZXJyO1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMucmVwb3J0KVxuICAgICAgICAgICAgICAgIG9wdGlvbnMucmVwb3J0KChlcnIgJiYgZXJyLnRvU3RyaW5nKCkpIHx8IGVyciwgb3B0aW9ucywgZXJyKTtcbiAgICAgICAgICAgIC8vIFNob3VsZCBub3QgcmV0cnkgaWYgbWF4IGhhcyBiZWVuIHJlYWNoZWRcbiAgICAgICAgICAgIHZhciBzaG91bGRSZXRyeSA9IG9wdGlvbnMuJGN1cnJlbnQgPCBvcHRpb25zLm1heDtcbiAgICAgICAgICAgIGlmICghc2hvdWxkUmV0cnkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpO1xuICAgICAgICAgICAgc2hvdWxkUmV0cnkgPSBvcHRpb25zLm1hdGNoLmxlbmd0aCA9PT0gMCB8fCBvcHRpb25zLm1hdGNoLnNvbWUoZnVuY3Rpb24gKG1hdGNoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1hdGNoZXMobWF0Y2gsIGVycik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmICghc2hvdWxkUmV0cnkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpO1xuICAgICAgICAgICAgdmFyIHJldHJ5RGVsYXkgPSBvcHRpb25zLmJhY2tvZmZCYXNlICogTWF0aC5wb3cob3B0aW9ucy5iYWNrb2ZmRXhwb25lbnQsIG9wdGlvbnMuJGN1cnJlbnQgLSAxKTtcbiAgICAgICAgICAgIC8vIERvIHNvbWUgYWNjb3VudGluZ1xuICAgICAgICAgICAgb3B0aW9ucy4kY3VycmVudCsrO1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMucmVwb3J0KVxuICAgICAgICAgICAgICAgIG9wdGlvbnMucmVwb3J0KGBSZXRyeWluZyAke29wdGlvbnMubmFtZX0gKCR7b3B0aW9ucy4kY3VycmVudH0pYCwgb3B0aW9ucyk7XG4gICAgICAgICAgICBpZiAocmV0cnlEZWxheSkge1xuICAgICAgICAgICAgICAgIC8vIFVzZSBiYWNrb2ZmIGZ1bmN0aW9uIHRvIGVhc2UgcmV0cnkgcmF0ZVxuICAgICAgICAgICAgICAgIGlmIChvcHRpb25zLnJlcG9ydClcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5yZXBvcnQoYERlbGF5aW5nIHJldHJ5IG9mICR7b3B0aW9ucy5uYW1lfSBieSAke3JldHJ5RGVsYXl9YCwgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgYmFja29mZlRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0cnlBc1Byb21pc2VkKGNhbGxiYWNrLCBvcHRpb25zKVxuICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4ocmVzb2x2ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaChyZWplY3QpO1xuICAgICAgICAgICAgICAgIH0sIHJldHJ5RGVsYXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0cnlBc1Byb21pc2VkKGNhbGxiYWNrLCBvcHRpb25zKVxuICAgICAgICAgICAgICAgICAgICAudGhlbihyZXNvbHZlKVxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2gocmVqZWN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5leHBvcnRzLnJldHJ5QXNQcm9taXNlZCA9IHJldHJ5QXNQcm9taXNlZDtcbjtcbmV4cG9ydHMuZGVmYXVsdCA9IHJldHJ5QXNQcm9taXNlZDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/retry-as-promised/dist/index.js\n");

/***/ })

};
;